name: Build Selected XBPS Package

on:
  workflow_dispatch:
    inputs:
      packages:
        description: "Packages to build"
        required: true
        default: "brave"
        type: string

permissions:
  contents: write
  packages: write

env:
  ARCH: x86_64
  HOST: x86_64
  PLATFORM: linux/amd64

jobs:
  build-packages:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/void-linux/void-glibc-full:20250227R1
      options: --privileged

    steps:
      - name: Setup environment
        run: |
          export PATH="/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin"
          mkdir -p /etc/xbps.d
          cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          xbps-install -Syu xbps
          xbps-install -Syu
          xbps-install -y curl openssh unzip git github-cli bash sudo
          useradd -G xbuilder -M builder

      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          repository: void-linux/void-packages
          path: void-packages

      - name: Checkout custom packages
        uses: actions/checkout@v4
        with:
          path: custom-packages

      - name: Setup and build packages
        run: |
          # Setup void-packages
          cp -r custom-packages/srcpkgs/* void-packages/srcpkgs/
          cd void-packages
          chown -R builder:builder . &&
          ln -s "$(pwd)" /hostrepo

          # Use the scripts from common/travis
          sudo -Eu builder bash common/travis/set_mirror.sh &&
          sudo -Eu builder bash common/travis/prepare.sh &&
          bash common/travis/fetch-xtools.sh

          # Build packages
          mkdir -p ~/packages ~/hostdir
          chown -R builder:builder ~/packages &&
          chown -R builder:builder ~/hostdir &&

          for pkg in `echo ${{ github.event.inputs.packages }} | tr ',' ' '`; do
            pkg_trim=$(echo "$pkg" | xargs)
            sudo -Eu builder ./xbps-src -j$(nproc) -s -H ~/hostdir pkg "$pkg_trim"
            cp ~/hostdir/binpkgs/"$pkg_trim"*.xbps ~/packages/
          done

      - name: Download the rest of the packages
        run: |
          gh release download latest --repo noid-linux/xbps-repo --dir ./old_releases

          rm -f ./old_releases/x86_64-repodata ./old_releases/*.sig2

          for pkg in `echo ${{ github.event.inputs.packages }} | tr ',' ' '`; do
            rm -f ./old_releases/"$pkg"*
          done

          cp -r ~/packages ~/release
          mv old_releases/* ~/packages/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sign and package
        env:
          PRIVATE_PEM: ${{ secrets.PRIVATE_PEM }}
          PRIVATE_PEM_PASSPHRASE: ${{ secrets.PRIVATE_PEM_PASSPHRASE }}
        run: |
          cd ~/packages
          xbps-rindex -a *
          temp_key=$(mktemp)
          echo "$PRIVATE_PEM" > "$temp_key"
          export XBPS_PASSPHRASE=$PRIVATE_PEM_PASSPHRASE
          chmod 600 "$temp_key"
          xbps-rindex --privkey "$temp_key" --sign --signedby "void-packages-github-actions" ~/packages
          xbps-rindex --privkey "$temp_key" --sign-pkg ~/packages/*.xbps
          rm -f "$temp_key"

          for pkg in $(ls -1 ~/release); do
            cp "$pkg".sig2 ~/release
          done

          cp x86_64-repodata ~/release

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: /github/home/release/
          retention-days: 1

  create-github-release:
    needs: build-packages
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/void-linux/void-glibc-full:20250227R1

    steps:
      - name: Install dependencies
        run: |
          xbps-install -Syu xbps
          xbps-install -Syu
          xbps-install -Syu && xbps-install -y curl git jq github-cli ripgrep

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: ~/release

      - name: Delete existing release assets
        run: |
          gh release view latest --repo noid-linux/xbps-repo --json assets --jq '.assets[].name' \
          | rg "$(echo ${{ github.event.inputs.packages }} | tr ',' '|')" \
          | xargs -I {} gh release delete-asset latest {} --repo noid-linux/xbps-repo --yes

          gh release delete-asset latest "x86_64-repodata" --repo noid-linux/xbps-repo --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            /github/home/release/*.xbps
            /github/home/release/*.sig2
            /github/home/release/x86_64-repodata
          tag_name: latest
          name: Latest Build
          body: |
            Latest build of XBPS packages
            Built on: ${{ github.event.repository.updated_at }}
          prerelease: false

  # create-forgejo-release:
  #   needs: build-packages
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/void-linux/void-glibc-full:20250227R1

  #   steps:
  #     - name: Install dependencies
  #       run: |
  #         xbps-install -Syu xbps
  #         xbps-install -Syu
  #         xbps-install -Syu && xbps-install -y bash curl git tea

  #     - name: Download built packages
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: built-packages
  #         path: ~/packages

  #     - name: Delete existing release
  #       run: |
  #         tea login add --name github-actions --url https://git.ch-naseem.com --token "$FORGEJO_TOKEN"
  #         tea release delete --repo noid-linux/xbps-repo -y --delete-tag latest
  #       env:
  #         FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}

  #     - name: Create Release
  #       shell: bash
  #       env:
  #         FORGEJO_TOKEN: ${{ secrets.FORGEJO_TOKEN }}
  #       run: |
  #         assets=$(ls -1 /github/home/release/ | grep '.xbps' | tr '\n' ' ')

  #         args=()

  #         for asset in $assets;
  #         do
  #           args+=(--asset "/github/home/release/$asset")
  #         done

  #         args+=(--asset /github/home/packages/x86_64-repodata)

  #         tea release create \
  #           --repo noid-linux/xbps-repo \
  #           --title "Latest Build" \
  #           --note "Latest build of XBPS packages Built on: ${{ github.event.repository.updated_at }}" \
  #           "${args[@]}" \
  #           latest
